/*
 * 1Password Connect
 *
 * REST API interface for 1Password Connect.
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: support@1password.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
#[allow(clippy::used_underscore_binding)]
pub struct Field {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "section", skip_serializing_if = "Option::is_none")]
    pub section: Option<Box<crate::raw::models::FieldSection>>,
    #[serde(rename = "type")]
    pub _type: Type,
    /// Some item types, Login and Password, have fields used for autofill. This property indicates that purpose and is required for some item types.
    #[serde(rename = "purpose", skip_serializing_if = "Option::is_none")]
    pub purpose: Option<Purpose>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    /// If value is not present then a new value should be generated for this field
    #[serde(rename = "generate", skip_serializing_if = "Option::is_none")]
    pub generate: Option<bool>,
    #[serde(rename = "recipe", skip_serializing_if = "Option::is_none")]
    pub recipe: Option<Box<crate::raw::models::GeneratorRecipe>>,
    /// For fields with a purpose of `PASSWORD` this is the entropy of the value
    #[serde(rename = "entropy", skip_serializing_if = "Option::is_none")]
    pub entropy: Option<f32>,
}

impl Field {
    #[allow(clippy::used_underscore_binding)]
    pub fn new(id: String, _type: Type) -> Field {
        Field {
            id,
            section: None,
            _type,
            purpose: None,
            label: None,
            value: None,
            generate: None,
            recipe: None,
            entropy: None,
        }
    }
}

///
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
)]
#[allow(clippy::upper_case_acronyms)]
pub enum Type {
    #[serde(rename = "STRING")]
    STRING,
    #[serde(rename = "EMAIL")]
    EMAIL,
    #[serde(rename = "CONCEALED")]
    CONCEALED,
    #[serde(rename = "URL")]
    URL,
    #[serde(rename = "TOTP")]
    TOTP,
    #[serde(rename = "DATE")]
    DATE,
    #[serde(rename = "MONTH_YEAR")]
    MONTHYEAR,
    #[serde(rename = "MENU")]
    MENU,
}

impl Default for Type {
    fn default() -> Type {
        Self::STRING
    }
}

/// Some item types, Login and Password, have fields used for autofill. This property indicates that purpose and is required for some item types.
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
)]
#[allow(clippy::upper_case_acronyms)]
pub enum Purpose {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "USERNAME")]
    USERNAME,
    #[serde(rename = "PASSWORD")]
    PASSWORD,
    #[serde(rename = "NOTES")]
    NOTES,
}

impl Default for Purpose {
    fn default() -> Purpose {
        Self::Empty
    }
}
