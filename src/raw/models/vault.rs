/*
 * 1Password Connect
 *
 * REST API interface for 1Password Connect.
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: support@1password.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Vault {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The vault version
    #[serde(
        rename = "attributeVersion",
        skip_serializing_if = "Option::is_none"
    )]
    pub attribute_version: Option<i32>,
    /// The version of the vault contents
    #[serde(
        rename = "contentVersion",
        skip_serializing_if = "Option::is_none"
    )]
    pub content_version: Option<i32>,
    /// Number of active items in the vault
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<i32>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "updatedAt", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
}

impl Vault {
    pub fn new() -> Vault {
        Vault {
            id: None,
            name: None,
            description: None,
            attribute_version: None,
            content_version: None,
            items: None,
            _type: None,
            created_at: None,
            updated_at: None,
        }
    }
}

///
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
)]
#[allow(clippy::upper_case_acronyms)]
pub enum Type {
    #[serde(rename = "USER_CREATED")]
    USERCREATED,
    #[serde(rename = "PERSONAL")]
    PERSONAL,
    #[serde(rename = "EVERYONE")]
    EVERYONE,
    #[serde(rename = "TRANSFER")]
    TRANSFER,
}

impl Default for Type {
    fn default() -> Type {
        Self::USERCREATED
    }
}
